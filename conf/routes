# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                                               controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                                          controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                                        controllers.AsyncController.message

POST     /api/vendor/new                                controllers.VendorController.addVendor

GET     /api/vendor/:vendorID                           controllers.VendorController.viewVendorDetails(vendorID: String)

GET     /api/shop/:vendorID                             controllers.VendorController.viewVendorShops(vendorID: String)

POST    /api/shop/new/:vendorID                         controllers.VendorController.addVendorShop(vendorID: String)

GET    /api/shop/details/:shopID                        controllers.VendorController.viewShopDetails(shopID: String)

GET    /api/vendor                                      controllers.VendorController.viewAllVendors

POST    /api/shop/edit/:shopID                          controllers.VendorController.editShopDetails(shopID: String)

POST    /api/vendor/approve/:vendorID                   controllers.VendorController.approveVendor(vendorID: String)

POST    /api/vendor/edit/:vendorID                      controllers.VendorController.editVendorDetails(vendorID: String)

POST    /api/vendor/disapprove/:vendorID                controllers.VendorController.disapproveVendor(vendorID: String)

DELETE    /api/vendor/delete/:vendorID                  controllers.VendorController.deleteVendor(vendorID: String)

DELETE    /api/shop/delete/:shopID                      controllers.VendorController.deleteVendor(shopID: String)

DELETE    /api/shop/product/delete/:productID           controllers.VendorController.deleteVendor(productID: String)

POST      /api/shop/product/add/:shopID                 controllers.VendorController.addProductToShop(shopID: String)

POST      /api/vendor/block/:vendorID                   controllers.VendorController.blockVendor(vendorID: String)

POST      /api/vendor/unblock/:vendorID                 controllers.VendorController.unBlockVendor(vendorID: String)

POST     /api/vendor/rating/add/:vendorID               controllers.VendorController.addRatingToVendor(vendorID: String)

POST     /api/shop/rating/add/:shopID                   controllers.VendorController.addRatingToShop(shopID: String)

POST     /api/product/rating/add/:productID             controllers.VendorController.addRatingToProduct(productID: String)

POST     /api/vendor/review/add/:vendorID               controllers.VendorController.addReviewToVendor(vendorID: String)

POST     /api/shop/review/add/:shopID                   controllers.VendorController.addReviewToShop(shopID: String)

POST     /api/product/review/add/:productID             controllers.VendorController.addReviewToProduct(productID: String)

GET     /api/shop/products/:shopID                      controllers.VendorController.viewShopProducts(shopID: String)

POST    /api/vendor/edit/:vendorID                      controllers.VendorController.editVendor(vendorID: String)

POST    /api/shop/coupon/add                            controllers.VendorController.addCoupon

GET     /api/shop/coupons/                              controllers.VendorController.showCoupons

DELETE  /api/shop/coupons/delete/:couponID              controllers.VendorController.deleteCoupon(couponID: String)

POST  /api/shop/coupons/validate/:couponID              controllers.VendorController.validateCoupon(couponID: String)

POST  /api/shop/coupons/invalidate/:couponID            controllers.VendorController.invalidateCoupon(couponID: String)

POST  /api/productCategory/add                          controllers.VendorController.addProductCategory

POST /api/users/signup                                  controllers.UserController.signUp

POST /api/users/signin                                  controllers.UserController.signIn

POST /api/users/block/:userID                           controllers.UserController.blockUser(userID: String)

POST /api/users/unblock/:userID                         controllers.UserController.unBlockUser(userID: String)

DELETE /api/users/delete/:userID                        controllers.UserController.deleteUser(userID: String)

GET /api/users/recover/:uname                           controllers.UserController.recoverAccount(uname: String)

DELETE /api/users/delete/:userID                        controllers.UserController.deleteUser(userID: String)

POST /api/users/role/:userID                            controllers.UserController.setRole(userID: String)

GET /api/users/role/:userID                             controllers.UserController.getRole(userID: String)

GET /api/users                                          controllers.UserController.viewUsers

GET  /api/productCategorys                              controllers.VendorController.viewProductCategorys

POST  /api/product/add                                  controllers.VendorController.addProduct

GET  /api/products                                      controllers.VendorController.viewProducts

POST  /api/product/edit/:productID                      controllers.VendorController.editProduct(productID: String)


POST  /api/courier/add                                  controllers.CourierController.addCourier

GET  /api/couriers                                      controllers.CourierController.viewCouriers

POST  /api/courier/edit/:courierID                      controllers.CourierController.editCourier(courierID: String)

POST  /api/courier/delete/:courierID                    controllers.CourierController.deleteCourier(courierID: String)

POST  /api/courier/undelete/:courierID                  controllers.CourierController.undeleteCourier(courierID: String)

POST  /api/courier/approve/:courierID                   controllers.CourierController.approveCourier(courierID: String)

POST  /api/courier/disapprove/:courierID                controllers.CourierController.disapproveCourier(courierID: String)

POST  /api/courier/block/:courierID                     controllers.CourierController.blockCourier(courierID: String)

POST  /api/courier/unblock/:courierID                   controllers.CourierController.unblockCourier(courierID: String)

POST    /api/courier/rating/add/:courierID              controllers.CourierController.addCourierRating(courierID: String)

POST    /api/courier/review/add/:courierID              controllers.CourierController.writeCourierReview(courierID: String)

GET  /api/ratings                                      controllers.CourierController.viewRatings
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)
